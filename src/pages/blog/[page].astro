---
import Layout from "../../layouts/Layout.astro";
import Burger from "../../components/Burger";
import Second from "../../components/Second.astro";
import Awards from "../../components/Awards";
import Contacts from "../../components/contacts/Contacts.astro";
import Footer from "../../components/footer/Footer.astro";
import { AwardsData, IBlogData } from "../../types";
import { blog } from "../../content/blog";
import { menu } from "../../content/menu";
import BlogCard from "../../components/blog/BlogCard";

const response = await fetch(
  "https://sheltered-river-97651.herokuapp.com/api/awards"
);
const awards_data = (await response.json()) as AwardsData;
const data = awards_data.data;
const x = data.map((item) => item.attributes);

export async function getStaticPaths({ paginate }) {
  const response = await fetch(
    "https://sheltered-river-97651.herokuapp.com/api/lawyer-posts"
  );
  const blog_data = (await response.json()) as IBlogData;
  const data = blog_data.data;
  const blogPages = data.map(({ attributes }) => {
    const short = [...attributes.content].slice(0, 200).join("") + "...";
    return {
      image: attributes.image,
      slug: attributes.slug,
      title: attributes.title,
      short,
    };
  });
  // Generate pages from our array of astronauts, with 2 to a page
  return paginate(blogPages.reverse(), { pageSize: 5 });
}
// All paginated data is passed on the "page" prop
const { page } = Astro.props;
const total = Math.ceil(page.total / page.size);
const pageArray = Array.from({ length: total }, (v, i) => i + 1);
---

<Layout
  title='Prawnik ds. rozwodów w Gdańsku | O nas'
  description='Zadzwoń do adwokata rozwodowego i jego zespół ma ponad 25-letnie doświadczenie. Bezpłatna konsultacja pod numerem 123-456-789'
>
  <Burger links={menu} client:idle />
  <Second />
  <section class='w-full lg:w-8/12 mx-auto lg:py-24'>
    <div class='py-12 text-center'>
      <p class='text-3xl lg:text-6xl text-center uppercase'>Nasz Blog</p>
      <p class='text-xl'>strona {page.currentPage}</p>
    </div>
    <div
      class='grid grid-cols-1 lg:grid-cols-2 lg:gap-x-10 lg:gap-y-10 lg:py-24'
    >
      {
        page.data.map(({ image, slug, title, short }, index) => (
          <BlogCard
            client:visible
            image={image}
            slug={slug}
            title={title}
            short={short}
            index={index}
          />
        ))
      }
    </div>
    <div>
      <ul class='flex gap-x-5 justify-center items-center py-10'>
        {
          page.currentPage === 1 ? (
            <li class='text-slate-400/80 cursor-auto pr-10'>
              <i class='arrow_disabled left' />
            </li>
          ) : (
            <li class='pr-10'>
              <a
                href={`/blog/${page.currentPage - 1}/`}
                aria-label='Go to the previous page'
              >
                <i class='arrow left' />
              </a>
            </li>
          )
        }

        {
          pageArray.map((num) => (
            <li>
              <a
                class={`px-4 py-2 ${
                  num === page.currentPage ? "bg-blue-500 text-white" : ""
                }`}
                href={`/blog/${num}/`}
              >
                {num}
              </a>
            </li>
          ))
        }
        {
          page.currentPage === total ? (
            <li class='text-slate-400/80 cursor-auto pl-10'>
              <i class='arrow_disabled right' />
            </li>
          ) : (
            <li>
              <a
                class='pl-10'
                href={`/blog/${page.currentPage + 1}/`}
                aria-label='Go to the next page'
              >
                <i class='arrow right' />
              </a>
            </li>
          )
        }
      </ul>
    </div>
  </section>

  <Awards images={x} client:visible />
  <Contacts />
  <Footer />
</Layout>

<style></style>
